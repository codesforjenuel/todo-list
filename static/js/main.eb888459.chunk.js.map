{"version":3,"sources":["components/partials/Task.js","components/Controls.js","components/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["Task","text","todo","todos","setTodos","TaskContainer","Btn","onClick","map","item","id","completed","className","filter","el","styled","button","div","Controls","setFilteredTodos","useState","status","setStatus","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","statusHandler","e","target","value","ControlsContainer","remove","removeItem","ToDo","inputText","setinputText","filteredTodos","TodoContainer","InputStyle","onChange","preventDefault","Math","random","input","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAIe,SAASA,EAAT,GAAiD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAe/C,OAEI,eAACC,EAAD,WACI,cAACC,EAAD,CAAKC,QAbO,WACpBH,EAASD,EAAMK,KAAI,SAAAC,GACf,OAAGA,EAAKC,KAAOR,EAAKQ,GAClB,2BACOD,GADP,IACYE,WAAYF,EAAKE,YAGxBF,OAMH,uBACA,mBAAGG,UAAS,oBAAeV,EAAKS,UAAY,YAAc,IAA1D,SAAiEV,IACjE,cAACK,EAAD,CAAKC,QAnBO,WACxBH,EAASD,EAAMU,QAAO,SAACC,GAAD,OAAQA,EAAGJ,KAAOR,EAAKQ,QAkBjC,uBAKZ,I,IAAMJ,EAAMS,IAAOC,OAAV,+CAMHX,EAAgBU,IAAOE,IAAV,8KC/BJ,SAASC,EAAT,GAA0D,IAAtCf,EAAqC,EAArCA,MAAOgB,EAA8B,EAA9BA,iBAAkBf,EAAY,EAAZA,SAC1D,EAA4BgB,mBAAS,OAArC,mBAAOC,EAAP,KAAeC,EAAf,KAkCAC,qBAAU,YATY,WACpB,GAAsC,OAAlCC,aAAaC,QAAQ,SACvBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACP,IAAIC,EAAaF,KAAKG,MAAMN,aAAaC,QAAQ,UACjDrB,EAASyB,IAKTE,KACC,IACJR,qBAAU,YA7BY,WACnB,OAAQF,GACN,IAAK,YACHF,EAAiBhB,EAAMU,QAAO,SAACX,GAAD,OAA6B,IAAnBA,EAAKS,cAC7C,MACF,IAAK,SACHQ,EAAiBhB,EAAMU,QAAO,SAACX,GAAD,OAA6B,IAAnBA,EAAKS,cAC7C,MACF,QACEQ,EAAiBhB,IAqBrB6B,GAfAR,aAAaE,QAAQ,QAASC,KAAKC,UAAUzB,MAiB5C,CAACA,EAAOkB,IAIX,IAAMY,EAAgB,SAACC,GACrBZ,EAAUY,EAAEC,OAAOC,QAMrB,OACE,eAACC,EAAD,WACE,4CACA,gCAEE,cAAC,EAAD,CAAKD,MAAM,MAAM7B,QAAS0B,EAA1B,iBACA,cAAC,EAAD,CAAKG,MAAM,YAAY7B,QAAS0B,EAAhC,uBACA,cAAC,EAAD,CAAKG,MAAM,SAAS7B,QAAS0B,EAA7B,uBAGF,8BACE,wBAAQ1B,QA5DW,WACnBY,EAAiBhB,EAAMU,QAAO,SAACX,GAAD,OAA6B,IAAnBA,EAAKS,gBACrDR,EAAMmC,OAAOnC,GACbC,EAASoB,aAAae,WAAWpC,EAAMiC,UAyD/B,wCAKR,I,MAAM9B,EAAMS,IAAOC,OAAV,+NAeHqB,EAAoBtB,IAAOE,IAAV,uOClFR,SAASuB,IACpB,MAA0BpB,mBAAS,IAAnC,mBAAOjB,EAAP,KAAcC,EAAd,KACA,EAAkCgB,mBAAS,IAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KAEA,EAA0CtB,mBAAS,IAAnD,mBAAOuB,EAAP,KAAsBxB,EAAtB,KAYA,OACI,eAACyB,EAAD,WACI,4CACA,cAACC,EAAD,CAAYT,MAAOK,EAAWK,SATd,SAACZ,GACrBQ,EAAaR,EAAEC,OAAOC,UASlB,cAAC,EAAD,CAAK7B,QAda,SAAC2B,GACvBA,EAAEa,iBACF3C,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEF,KAAMwC,EAAW9B,WAAW,EAAOD,GAAoB,IAAhBsC,KAAKC,cAY9D,oBACCN,EAAcnC,KAAI,SAACN,GAAD,OACf,cAACF,EAAD,CAEIC,KAAMC,EAAKD,KACXE,MAAOA,EACPC,SAAUA,EACVF,KAAMA,GAJDA,EAAKQ,OAQlB,cAACQ,EAAD,CAEAd,SAAUA,EACND,MAAOA,EACPgB,iBAAkBA,EAClBwB,cAAeA,OAK/B,IAAMrC,EAAMS,IAAOC,OAAV,+NAcH4B,EAAgB7B,IAAOE,IAAV,kMAUb4B,EAAa9B,IAAOmC,MAAV,4GC3DDC,MATf,WACE,OACE,+BAEJ,cAACX,EAAD,OCMeY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb888459.chunk.js","sourcesContent":["import React from 'react'\nimport styled from \"styled-components\"\n\n\nexport default function Task({ text, todo,  todos, setTodos }) {\n  const deleteHandler = () => {\nsetTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\nconst completeHandler = () => {\n    setTodos(todos.map(item =>{\n        if(item.id === todo.id){\n          return{\n              ...item,completed: !item.completed\n          }  \n        }\n        return item;\n    }))\n}  \n    return (\n\n        <TaskContainer >\n            <Btn onClick={completeHandler}>Completed</Btn>\n            <p className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</p>\n            <Btn onClick={deleteHandler}>Delete</Btn>\n        </TaskContainer>\n\n    )\n}\nconst Btn = styled.button`\nheight:30px ;\n\n\n`\n\nconst TaskContainer = styled.div`\nheight:30px ;\n display:flex ;\n flex-direction: row ;\n justify-content: space-between ;\n align-items: center ;\n background-color:darkgray ;\n `\n\n\n \n ","import React, { useState, useEffect } from 'react'\nimport styled from \"styled-components\"\n\n\nexport default function Controls({ todos, setFilteredTodos, setTodos }) {\n  const [status, setStatus] = useState('all')\n\n  const deleteAllHandler = () => {\n    if (setFilteredTodos(todos.filter((todo) => todo.completed === false)))  {\ntodos.remove(todos);\nsetTodos(localStorage.removeItem(todos.value))\n    }\n  }\n const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo) => todo.completed === true))\n        break;\n      case 'active':\n        setFilteredTodos(todos.filter((todo) => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n \n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n    let todoLocal =  JSON.parse(localStorage.getItem(\"todos\"))\n    setTodos(todoLocal);\n    }\n  }\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  \n \n  \n  const statusHandler = (e) => {\n    setStatus(e.target.value)\n\n\n  }\n\n\n  return (\n    <ControlsContainer>\n      <p>2 Task Left</p>\n      <div>\n\n        <Btn value=\"all\" onClick={statusHandler} >All</Btn>\n        <Btn value=\"completed\" onClick={statusHandler} >Completed</Btn>\n        <Btn value=\"active\" onClick={statusHandler} >Active</Btn>\n\n      </div>\n      <div>\n        <button onClick={deleteAllHandler}>Delete Completed Task</button>\n      </div>\n    </ControlsContainer>\n  )\n}\nconst Btn = styled.button`\nmargin:10px ;\nbackground:none ;\nheight: 20%;\nwidth: 80px;\nborder-radius: 5px ;\nborder:2px solid aquamarine ;\n&:hover{\n  background-color:aquamarine ;\n  transition-duration: 500ms ;\n}\n\n`\n\n\nconst ControlsContainer = styled.div`\npadding-left: 2% ;\npadding-right: 2% ;\ndisplay:flex ;\nflex-direction:row ;\njustify-content: space-between;\nalign-items: center ;\nbackground-color:lightgray ;\n\nborder-radius: 0px 0px 10px 10px ;\n`","import React, { useState } from 'react'\nimport Task from './partials/Task'\nimport Controls from './Controls'\nimport styled from \"styled-components\"\n\nexport default function ToDo() {\n    const [todos, setTodos] = useState([]);\n    const [inputText, setinputText] = useState(\"\");\n\n    const [filteredTodos, setFilteredTodos] = useState([])\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([...todos, { text: inputText, completed: false, id: Math.random() * 1000 }])\n    }\n    const handleinputText = (e) => {\n        setinputText(e.target.value);\n\n    }\n\n\n    return (\n        <TodoContainer>\n            <h1>To Do List</h1>\n            <InputStyle value={inputText} onChange={handleinputText} />\n            <Btn onClick={submitTodoHandler}>Create</Btn>\n            {filteredTodos.map((todo) => (\n                <Task\n                    key={todo.id}\n                    text={todo.text}\n                    todos={todos}\n                    setTodos={setTodos}\n                    todo={todo} />\n\n            ))}\n\n            <Controls\n            \n            setTodos={setTodos}\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n                filteredTodos={filteredTodos} />\n        </TodoContainer>\n    )\n}\n\nconst Btn = styled.button`\nmargin:10px ;\nbackground:none ;\nheight: 20%;\nwidth: 80px;\nborder-radius: 5px ;\nborder:2px solid aquamarine ;\n&:hover{\n  background-color:aquamarine ;\n  transition-duration: 500ms ;\n}\n\n`\n\nconst TodoContainer = styled.div`\nbackdrop-filter: blur(10px)  ;\nborder-radius:10px ;\nwidth:120% ;\nmargin-top:15% ;\nbox-shadow: 0px 0px 15px black; \ntext-align:center ;\nbackground-color:none ;\n`\n\nconst InputStyle = styled.input`\nborder-radius: 10px ;\nborder: 0px solid ;\n\n&:focus {\n    outline:none ;\n}\n`;","import './App.css';\nimport ToDo from './components/ToDo'\nfunction App() {\n  return (\n    <main>\n    \n<ToDo />\n</main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}